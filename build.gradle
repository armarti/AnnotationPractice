plugins {
    id 'java'
    id 'idea'
    id 'org.jetbrains.kotlin.jvm'
}

group "${projectGroup}"
version "${projectVersion}"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:${kotlinJvmVersion}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinJvmVersion}"
    testCompile "org.jetbrains.kotlin:kotlin-test:${kotlinJvmVersion}"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:${kotlinJvmVersion}"
    testCompile "junit:junit:${junitVersion}"
}

sourceSets.main.java.srcDirs
def mkSrcdirs(name) {
    def gs = "$group".replace('.', File.separator)
    sourceSets.each {
        "src/${it.name}/$name/$gs".with { mkdir it; [ it ] }
    }
}

mkSrcdirs 'kotlin'
mkSrcdirs 'java'

// https://stackoverflow.com/a/35632444/4106215
task repl(type: JavaExec) {
    main = 'scala.tools.nsc.MainGenericRunner'
    classpath = sourceSets.main.runtimeClasspath
    standardInput System.in
    args '-usejavacp'
}
